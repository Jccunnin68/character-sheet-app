apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  namespace: character-sheet
  labels:
    {{- include "character-sheet.labels" . | nindent 4 }}
    app.kubernetes.io/component: database
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "character-sheet.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: database
  template:
    metadata:
      labels:
        {{- include "character-sheet.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: database
    spec:
      containers:
        - name: postgres
          image: "{{ .Values.postgres.image.repository }}:{{ .Values.postgres.image.tag }}"
          imagePullPolicy: {{ .Values.postgres.image.pullPolicy }}
          ports:
            - name: postgresql
              containerPort: 5432
              protocol: TCP
          env:
            {{- toYaml .Values.postgres.env | nindent 12 }}
          resources:
            {{- toYaml .Values.postgres.resources | nindent 12 }}
          volumeMounts:
            - name: postgres-data
              mountPath: /var/lib/postgresql/data
          livenessProbe:
            exec:
              command:
                - pg_isready
                - -U
                - postgres
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            exec:
              command:
                - pg_isready
                - -U
                - postgres
            initialDelaySeconds: 5
            periodSeconds: 5
      volumes:
        - name: postgres-data
          {{- if .Values.postgres.persistence.enabled }}
          persistentVolumeClaim:
            claimName: postgres-pvc
          {{- else }}
          emptyDir: {}
          {{- end }} 