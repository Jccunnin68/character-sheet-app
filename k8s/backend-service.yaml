# Backend API Service
# This service provides internal load balancing for backend API pods
# Routes traffic from ALB/ingress to backend pods

apiVersion: v1
kind: Service
metadata:
  name: backend-service
  namespace: character-sheet
  labels:
    app: backend
    component: api
  annotations:
    # Service annotations for AWS Load Balancer Controller
    service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
    service.beta.kubernetes.io/aws-load-balancer-scheme: "internet-facing"
    service.beta.kubernetes.io/aws-load-balancer-nlb-target-type: "ip"
    
    # Health check configuration
    service.beta.kubernetes.io/aws-load-balancer-healthcheck-path: "/health"
    service.beta.kubernetes.io/aws-load-balancer-healthcheck-interval: "10"
    service.beta.kubernetes.io/aws-load-balancer-healthcheck-timeout: "5"
    service.beta.kubernetes.io/aws-load-balancer-healthy-threshold: "2"
    service.beta.kubernetes.io/aws-load-balancer-unhealthy-threshold: "3"
    
    # Access control for geo-restriction (US, Canada, Europe)
    service.beta.kubernetes.io/aws-load-balancer-source-ranges: |
      3.0.0.0/8,4.0.0.0/6,8.0.0.0/7,12.0.0.0/6,16.0.0.0/4,24.0.0.0/5,32.0.0.0/3,64.0.0.0/2,128.0.0.0/2,192.0.0.0/2,142.0.0.0/8,206.0.0.0/7,208.0.0.0/4,2.0.0.0/8,5.0.0.0/8,31.0.0.0/8,37.0.0.0/8,46.0.0.0/8,62.0.0.0/8,77.0.0.0/8,78.0.0.0/7,80.0.0.0/4,109.0.0.0/8,151.0.0.0/8,176.0.0.0/4,193.0.0.0/8,194.0.0.0/7,213.0.0.0/8

spec:
  type: LoadBalancer  # Creates AWS Network Load Balancer
  
  # Load balancer configuration
  loadBalancerSourceRanges:
    # Geo-restriction: Only allow access from US, Canada, and Europe
    # United States IP ranges
    - "3.0.0.0/8"      # Amazon/AWS US
    - "4.0.0.0/6"      # Level 3 Communications US
    - "8.0.0.0/7"      # Level 3 Communications US
    - "12.0.0.0/6"     # AT&T US
    - "16.0.0.0/4"     # Hewlett-Packard US
    - "24.0.0.0/5"     # Comcast US
    - "32.0.0.0/3"     # Major US ISPs
    - "64.0.0.0/2"     # Major US ISPs
    - "128.0.0.0/2"    # Major US ISPs
    - "192.0.0.0/2"    # Major US ISPs
    
    # Canada IP ranges
    - "142.0.0.0/8"    # Canadian ISPs
    - "206.0.0.0/7"    # Canadian ISPs
    - "208.0.0.0/4"    # North American ISPs (includes Canada)
    
    # Europe IP ranges
    - "2.0.0.0/8"      # European ISPs
    - "5.0.0.0/8"      # European ISPs
    - "31.0.0.0/8"     # European ISPs
    - "37.0.0.0/8"     # European ISPs
    - "46.0.0.0/8"     # European ISPs
    - "62.0.0.0/8"     # European ISPs
    - "77.0.0.0/8"     # European ISPs
    - "78.0.0.0/7"     # European ISPs
    - "80.0.0.0/4"     # European ISPs
    - "109.0.0.0/8"    # European ISPs
    - "151.0.0.0/8"    # European ISPs
    - "176.0.0.0/4"    # European ISPs
    - "193.0.0.0/8"    # European ISPs
    - "194.0.0.0/7"    # European ISPs
    - "213.0.0.0/8"    # European ISPs
  
  # Service ports
  ports:
  - port: 80          # External port (standard HTTP)
    targetPort: 8080  # Container port
    protocol: TCP
    name: http
  
  # Select backend pods
  selector:
    app: backend
    component: api

---
# Internal Service for Backend (for ingress/internal communication)
# This service is used for internal cluster communication
apiVersion: v1
kind: Service
metadata:
  name: backend-internal
  namespace: character-sheet
  labels:
    app: backend
    component: api
  annotations:
    description: "Internal service for backend API"
spec:
  type: ClusterIP  # Internal only
  
  ports:
  - port: 8080        # Internal port
    targetPort: 8080  # Container port
    protocol: TCP
    name: http
  
  selector:
    app: backend
    component: api 